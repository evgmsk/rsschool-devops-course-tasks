FROM jenkins/inbound-agent:alpine-jdk17

USER root

# Install base packages
RUN apk add --no-cache \
    bash \
    python3 \
    py3-pip \
    curl \
    git \
    docker-cli \
    nodejs \
    npm \
    unzip \
    libstdc++ \
    shadow


# Optional: Create Python virtual environment for tools
ENV VIRTUAL_ENV=/opt/venv
RUN python3 -m venv $VIRTUAL_ENV
ENV PATH="$VIRTUAL_ENV/bin:$PATH"

# Install Python tools
RUN pip install --no-cache-dir pytest

# Install AWS CLI v2
RUN curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip" && \
    unzip awscliv2.zip && \
    ./aws/install && \
    rm -rf awscliv2.zip aws

# Install Helm
RUN curl https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 | bash

# Install kubectl
RUN curl -LO "https://dl.k8s.io/release/$(curl -Ls https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl" && \
    install -o root -g root -m 0755 kubectl /usr/local/bin/kubectl && \
    rm kubectl

# Install SonarScanner
RUN curl -L -o sonar-scanner.zip https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-5.0.1.3006-linux.zip && \
    unzip sonar-scanner.zip -d /opt && \
    ln -s /opt/sonar-scanner-*/bin/sonar-scanner /usr/local/bin/sonar-scanner && \
    rm sonar-scanner.zip

RUN ln -sf /usr/local/aws-cli/v2/current/bin/aws /usr/local/bin/aws || true

# Add jenkins user to docker group
RUN getent group docker && usermod -aG docker jenkins || echo "Docker group not found"

# Fix permissions for Docker socket
RUN chmod 666 /var/run/docker.sock || true

USER jenkins

ENV PATH="/opt/sonar-scanner-5.0.1.3006-linux/bin:/usr/local/bin:/usr/bin:${PATH}"

RUN aws --version || true

# Set environment variables for runtime (can be overridden by Kubernetes secrets)
ENV GITHUB_USERNAME=""
ENV GITHUB_TOKEN=""
ENV SONAR_TOKEN=""


