controller:
  installPlugins:
    - kubernetes:latest
    - workflow-aggregator
    - git
    - docker-workflow
    - amazon-ecr
    - kubernetes-cli
    - configuration-as-code
    - credentials-binding
    - plain-credentials
    - matrix-auth
    - ssh-agent
    - sonar
    - pipeline-stage-view

  serviceAccount:
    name: jenkins
    annotations:
      eks.amazonaws.com/role-arn: arn:aws:iam::753350392043:role/ecr-man

  agent:
    image:
      registry: 753350392043.dkr.ecr.eu-west-1.amazonaws.com
      repository: jenkins-agent
      tag: latest
    imagePullSecretName: ecr-registry-secret
    alwaysPullImage: true
    customJenkinsLabels: ecr-python-agent
  additionalAgents:
    ecr-python-agent:
      customJenkinsLabels: ecr-python-agent
      yamlTemplate: |-
        apiVersion: v1
        kind: Pod
        metadata:
          labels:
            jenkins/label: ecr-python-agent
        spec:
          containers:
            - name: tools
              image: 753350392043.dkr.ecr.eu-west-1.amazonaws.com/jenkins-agent:latest
              imagePullPolicy: Always
              command:
                - cat
              tty: true
              envFrom:
                - secretRef:
                    name: github-credentials
                - secretRef:
                    name: jenkins-sonar-token
              resources:
                requests:
                  cpu: 100m
                  memory: 256Mi
                limits:
                  cpu: 500m
                  memory: 512Mi
          restartPolicy: Never
          
  JCasC:
    configScripts:
      disableDefaultAgent:
        inline: |
          jenkins:
            clouds:
              - kubernetes:
                  podRetention: Never
                  templates:
                    - name: "ecr-python-agent"
                      label: "ecr-python-agent"
                      containers:
                        - name: tools
                          image: 753350392043.dkr.ecr.eu-west-1.amazonaws.com/jenkins-agent:latest
                          ttyEnabled: true
                          command: ["cat"]
                          envVars:
                            - envVar:
                                key: SONAR_AUTH_TOKEN
                                valueFrom:
                                  secretKeyRef:
                                    name: jenkins-sonar-token
                                    key: SONAR_AUTH_TOKEN
                            - envVar:
                                key: GITHUB_TOKEN
                                valueFrom:
                                  secretKeyRef:
                                    name: github-credentials
                                    key: GITHUB_TOKEN
rbac:
  create: true

imagePullSecrets:
  - name: ecr-registry-secret

pipeline:
  gitUrl: "https://github.com/evgmsk/rsschool-devops-course-tasks.git"

sonarqube:
  url: "http://sonarqube:9000"

aws:
  region: "eu-west-1"

persistence:
  enabled: true
  storageClass: "manual"
  accessMode: ReadWriteOnce
  size: 8Gi
  volumes:
    - name: jenkins-home
      hostPath:
        path: /data/jenkins

securityContext:
  runAsUser: 1000
  fsGroup: 1000

resources:
  requests:
    cpu: 100m
    memory: 256Mi
  limits:
    cpu: 500m
    memory: 512Mi

admin:
  name: admin
  password: password
  email: emoskvich@yandex.com

service:
  type: NodePort
  port: 8080
  nodePort: 30080
