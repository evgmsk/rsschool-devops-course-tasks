controller:
  installPlugins:
    - kubernetes:latest
    - workflow-aggregator
    - git
    - docker-workflow
    - amazon-ecr
    - kubernetes-cli
    - configuration-as-code
    - credentials-binding
    - plain-credentials
    - matrix-auth
    - ssh-agent
    - sonar
    - pipeline-stage-view

  serviceAccount:
    name: jenkins

  imagePullSecrets:
    - name: ecr-credentials
    
  agent:
    enabled: true
    image: "753350392043.dkr.ecr.eu-west-1.amazonaws.com/jenkins-agent:latest"
    imagePullSecrets:
      - name: ecr-credentials
    alwaysPullImage: true
    customJenkinsLabels: "jenkins-agent"

  JCasC:
    overwriteConfiguration: false
    configScripts:
      kubernetes-cloud: |
        jenkins:
          clouds:
            - kubernetes:
                name: "kubernetes"
                serverUrl: "https://kubernetes.default.svc"
                namespace: "jenkins"
                jenkinsUrl: "http://jenkins.jenkins.svc.cluster.local:8080"
                jenkinsTunnel: "jenkins-agent.jenkins.svc.cluster.local:50000"
                podRetention: "Never"
                connectTimeout: 100
                readTimeout: 300
                templates:
                  - name: "jenkins-agent"
                    namespace: "jenkins"
                    label: "jenkins-agent"
                    nodeUsageMode: "NORMAL"
                    containers:
                      - name: "jnlp"
                        image: "753350392043.dkr.ecr.eu-west-1.amazonaws.com/jenkins-agent:latest"
                        alwaysPullImage: true
                        workingDir: "/home/jenkins/agent"
                        ttyEnabled: true
                        resourceRequestCpu: "100m"
                        resourceRequestMemory: "256Mi"
                        resourceLimitCpu: "500m"
                        resourceLimitMemory: "512Mi"
                    volumes:
                      - hostPathVolume:
                          hostPath: "/var/run/docker.sock"
                          mountPath: "/var/run/docker.sock"
                    imagePullSecrets:
                      - name: "ecr-credentials"

rbac:
  create: true
  serviceAccount:
    create: true
    name: jenkins
    annotations:
      eks.amazonaws.com/role-arn: arn:aws:iam::753350392043:role/ecr-man
    imagePullSecrets:
      - name: ecr-credentials
  clusterRoleBinding:
    create: true
    name: jenkins-admin
    clusterRole: cluster-admin

imagePullSecrets:
  - name: ecr-registry-secret

pipeline:
  gitUrl: "https://github.com/evgmsk/rsschool-devops-course-tasks.git"

sonarqube:
  url: "http://sonarqube:9000"

aws:
  region: "eu-west-1"

persistence:
  enabled: true
  storageClass: "manual"
  accessMode: ReadWriteOnce
  size: 8Gi
  volumes:
    - name: jenkins-home
      hostPath:
        path: /data/jenkins

securityContext:
  runAsUser: 1000
  fsGroup: 1000

resources:
  requests:
    cpu: 100m
    memory: 256Mi
  limits:
    cpu: 500m
    memory: 512Mi

admin:
  name: admin
  password: password
  email: emoskvich@yandex.com

service:
  type: NodePort
  port: 8080
  nodePort: 30080