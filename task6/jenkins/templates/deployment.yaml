apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}
  labels:
    app: jenkins
    chart: {{ .Chart.Name }}-{{ .Chart.Version }}
    release: {{ .Release.Name }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: jenkins
      release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: jenkins
        release: {{ .Release.Name }}
    spec:
      {{- if .Values.rbac.create }}
      serviceAccountName: {{ .Release.Name }}
      {{- end }}
      securityContext:
        runAsUser: {{ .Values.securityContext.runAsUser }}
        fsGroup: {{ .Values.securityContext.fsGroup }}
      initContainers:
      - name: fix-permissions
        image: busybox
        command: ["sh", "-c", "chown -R 1000:1000 /var/jenkins_home"]
        securityContext:
          runAsUser: 0
        volumeMounts:
        - name: jenkins-home
          mountPath: /var/jenkins_home
      containers:
      - name: jenkins
        image: {{ .Values.image.repository }}:{{ .Values.image.tag }}
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        ports:
        - name: http
          containerPort: 8080
        - name: jnlp
          containerPort: 50000
        resources:
          {{- toYaml .Values.resources | nindent 12 }}
        volumeMounts:
        - name: jenkins-home
          mountPath: /var/jenkins_home
        env:
        - name: JENKINS_OPTS
          value: "--httpPort=8080"
        - name: JENKINS_ADMIN_ID
          valueFrom:
            secretKeyRef:
              name: {{ .Release.Name }}-credentials
              key: jenkins-admin-user
        - name: JENKINS_ADMIN_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ .Release.Name }}-credentials
              key: jenkins-admin-password
        - name: CASC_JENKINS_CONFIG
          value: "/var/jenkins_home/casc_configs"
        - name: JAVA_OPTS
          value: "-Djenkins.install.runSetupWizard=false"
        - name: JENKINS_UC_DOWNLOAD
          value: "https://updates.jenkins.io"
        - name: SONAR_TOKEN
          valueFrom:
            secretKeyRef:
              name: jenkins-sonar-token
              key: token
              optional: true
        - name: GITHUB_USERNAME
          valueFrom:
            secretKeyRef:
              name: github-credentials
              key: username
              optional: true
        - name: GITHUB_TOKEN
          valueFrom:
            secretKeyRef:
              name: github-credentials
              key: token
              optional: true
        volumeMounts:
        - name: jenkins-home
          mountPath: /var/jenkins_home
        - name: jenkins-config
          mountPath: /var/jenkins_home/casc_configs/jenkins.yaml
          subPath: jenkins.yaml
        - name: plugins-config
          mountPath: /usr/share/jenkins/ref/plugins.txt
          subPath: plugins.txt
        - name: docker-sock
          mountPath: /var/run/docker.sock
      volumes:
      - name: jenkins-home
        {{- if .Values.persistence.enabled }}
        persistentVolumeClaim:
          claimName: {{ .Release.Name }}-pvc
        {{- else }}
        emptyDir: {}
        {{- end }}
      - name: jenkins-config
        configMap:
          name: {{ .Release.Name }}-jenkins-config
      - name: plugins-config
        configMap:
          name: {{ .Release.Name }}-plugins
      - name: docker-sock
        hostPath:
          path: /var/run/docker.sock